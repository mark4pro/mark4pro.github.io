/** Copyright (c) 2016 WIMI5. All rights reserved. */ (function(){var l=void 0,m=!1,q=this;function t(a){a=a.split(".");var c=q;!(a[0]in c)&&c.execScript&&c.execScript("var "+a[0]);for(var b;a.length&&(b=a.shift());)c=c[b]?c[b]:c[b]={}};t("PENGO.client.shared.runEngine.howlerAudio.actuators.audioShooter");
window.PENGO.client.shared.runEngine.howlerAudio.actuators.audioShooter.resolve=function(){function a(b,a,f,e){function g(b){d.fireOutput(1,b)}var d=new c.runEngine.Blackbox(b,a,f,e,"_AudioShooter_key");d.createInParam("audio",0);d.createOutput("playShot",0);d.createOutput("allEnded",1);d.createOutput("allStopped",2);d.b=[];c.runEngine.getManager().c?(a=function(){d.inParameters.audio&&d.b.push(d.inParameters.audio.play(l,function(){b.callOnNextUpdateDraw(function(b){d.fireOutput(0,b)})},function(a){d.b.splice(d.b.indexOf(a),
1);0===d.b.length&&b.callOnNextUpdateDraw(g)}))},f=function(){if(d.inParameters.audio){for(var a=0;a<d.b.length;a++)d.inParameters.audio.stop(d.b[a],g);d.b=[];b.callOnNextUpdateDraw(function(a){d.fireOutput(2,a)})}}):(a=function(a){d.fireOutput(0,a);b.callOnNextUpdateDraw(g)},f=function(a){d.fireOutput(2,a)});d.createInput("play",0,a);d.createInput("stop",1,f);return d}var c;return{dependencies:function(b){b.runEngine.blackboxRepository.addBlackboxType("_AudioShooter_key",a);b.runEngine.blackboxRepository.setSpecificCallbacksToBlackboxType("_AudioShooter_key",
function(a){a.inParameters.audio&&(a.b=[],a.inParameters.audio.stop())},l);c=b},implementation:{i:a}}};t("PENGO.client.shared.runEngine.howlerAudio.actuators.bbMute");
window.PENGO.client.shared.runEngine.howlerAudio.actuators.bbMute.resolve=function(){function a(a,k,f,e){var g=new c.runEngine.Blackbox(a,k,f,e,"_Mute_key");g.createOutput("muted",0);g.createOutput("notMuted",1);g.createInput("on",0,function(a){c.runEngine.getManager().d(!0);g.fireOutput(0,a)});g.createInput("off",1,function(a){c.runEngine.getManager().d(m);g.fireOutput(1,a)});return g}var c;return{dependencies:function(b){b.runEngine.blackboxRepository.addBlackboxType("_Mute_key",a);b.runEngine.blackboxRepository.setSpecificCallbacksToBlackboxType("_Mute_key",
function(){c.runEngine.getManager().d(m)},l);c=b},implementation:{j:a}}};t("PENGO.client.ide.runEngine.howlerAudio.actuators.bbMute");window.PENGO.client.ide.runEngine.howlerAudio.actuators.bbMute.resolve=function(){return{dependencies:function(a){a.runEngine.blackboxRepository.updateBlackboxTypeToIDE("_Mute_key",l,"Mute","Audio/actuators")}}};t("PENGO.client.shared.runEngine.howlerAudio.audio");
window.PENGO.client.shared.runEngine.howlerAudio.audio.resolve=function(){function a(a){this.a=a}a.prototype={play:function(a,b,k,f){var e;if(a!==l){try{this.a.loop(f,a)}catch(g){}try{e=this.a.play(a)}catch(d){}}else{try{this.a.loop(f)}catch(r){}try{e=this.a.play()}catch(n){}}b&&this.a.once("play",b,e);!f&&k&&this.a.on("end",k,e);return e},stop:function(a,b){b&&this.a.off("end",b,a);try{a!==l&&!this.a.playing(a)&&(this.a._soundById(a)._paused=m),this.a.stop(a)}catch(k){}},pause:function(a,b){b&&this.a.once("pause",
b,a);try{this.a.pause(a)}catch(k){}}};return{dependencies:function(){},implementation:{Audio:a}}};t("PENGO.client.shared.runEngine.howlerAudio.manager");
window.PENGO.client.shared.runEngine.howlerAudio.manager.resolve=function(){function a(b,k,f){function e(a){a=g.indexOf(a);-1!=a&&g.splice(a,1)}var g=[];this.k=k;a.prototype.c=window.Howler!==l;window.Howler===l&&c.logger.error("Howler Audio not supported.");(b=c.resourceManager.getTypes().AUDIO)&&f.registerAssetType({type:b,callbacks:{load:function(b,k,f){var e;a.prototype.c&&(e=b?new c.runEngine.audio.Audio(b):new c.runEngine.audioDummy.AudioDummy,g.push(e));k(f,e)},unload:function(){return e}}})}
var c;a.prototype={c:!0,g:function(){if(a.prototype.c)return new c.runEngine.audioDummy.AudioDummy},d:function(a){window.Howler.mute(a)},f:l,e:l};a.prototype.beforePlayNotify=a.prototype.f;a.prototype.afterStopNotify=a.prototype.e;a.prototype.createAudioDummy=a.prototype.g;return{dependencies:function(a){c=a;a.runEngine.paramManager.addParamType("_Audio_","Audio",l)},implementation:{Manager:a,config:{}}}};t("PENGO.client.ide.runEngine.howlerAudio.actuators.audioShooter");
window.PENGO.client.ide.runEngine.howlerAudio.actuators.audioShooter.resolve=function(){return{dependencies:function(a){a.runEngine.blackboxRepository.updateBlackboxTypeToIDE("_AudioShooter_key",l,"AudioShooter","Audio/actuators");a.runEngine.blackboxRepository.setInParamConnectionRulesToBlackboxType("_AudioShooter_key","audio",m,"_Audio_","The audio to be played");a.runEngine.blackboxRepository.setOuputsFireModeToBlackboxType("_AudioShooter_key",["async","async","both"])}}};t("PENGO.client.shared.runEngine.howlerAudio.audioDummy");window.PENGO.client.shared.runEngine.howlerAudio.audioDummy.resolve=function(){function a(){this.l=this.m=l;Object.defineProperty(this,"maxConcurrent",{get:function(){return 0},set:function(){},enumerable:!0,configurable:!0})}a.prototype={play:function(a,b,k,f){b&&b();!f&&k&&setTimeout(k,0);return a},stop:function(a,b){b&&b()},pause:function(a,b){b&&b()}};return{dependencies:function(){},implementation:{AudioDummy:a}}};t("PENGO.client.ide.runEngine.howlerAudio.audioDummy");window.PENGO.client.ide.runEngine.howlerAudio.audioDummy.resolve=function(){var a=function b(a,f,e){b.super_.constructor.call(this,a,f,e)};return{dependencies:function(b){b.inheritance.inheritance.inherits(a,b.runEngine.audioDummy.base.AudioDummy)},implementation:{AudioDummy:a}}};t("PENGO.client.ide.runEngine.howlerAudio.audio");window.PENGO.client.ide.runEngine.howlerAudio.audio.resolve=function(){var a=function b(a,f,e){b.super_.constructor.call(this,a,f,e)};return{dependencies:function(b){b.inheritance.inheritance.inherits(a,b.runEngine.audio.base.Audio)},implementation:{Audio:a}}};t("PENGO.client.shared.runEngine.howlerAudio.actuators.audioPlayer");
window.PENGO.client.shared.runEngine.howlerAudio.actuators.audioPlayer.resolve=function(){function a(a,f,e,g){function d(){a.callOnNextUpdateDraw(r)}function r(a){n=0;h.fireOutput(3,a)}var n=0,p,s,h=new c.runEngine.Blackbox(a,f,e,g,"_AudioPlayer_key");h.createInParam("audio",0);h.createInParam("loop",1);h.createOutput("onPlay",0);h.createOutput("onPause",1);h.createOutput("onStop",2);h.createOutput("onPlayEnd",3);c.runEngine.getManager().c?(f=function(){h.inParameters.audio&&2!=n&&(b=h.inParameters.loop?
!0:m,p=h.inParameters.audio,s=p.play(l,function(){a.callOnNextUpdateDraw(function(a){h.fireOutput(0,a)})},d,b),n=2)},e=function(){p&&2==n&&(p.pause(s,function(){a.callOnNextUpdateDraw(function(a){n=1;h.fireOutput(1,a)})}),n=1)},g=function(b){p&&(b?(p.stop(s,d),a.callOnNextUpdateDraw(function(a){n=0;h.fireOutput(2,a)})):(p.stop(s),n=0),p=l)}):(f=function(b){h.fireOutput(0,b);a.callOnNextUpdateDraw(r)},e=function(a){h.fireOutput(1,a)},g=function(a){h.fireOutput(2,a)});h.createInput("play",0,f);h.createInput("pause",
1,e);h.createInput("stop",2,g);h.stopPlay=g;return h}var c,b;return{dependencies:function(b){b.runEngine.blackboxRepository.addBlackboxType("_AudioPlayer_key",a);b.runEngine.blackboxRepository.setSpecificCallbacksToBlackboxType("_AudioPlayer_key",function(a){a.stopPlay()},l);b.runEngine.blackboxRepository.setInParamDefaultValueToBlackboxType("_AudioPlayer_key","loop",m);c=b},implementation:{h:a}}};t("PENGO.client.ide.runEngine.howlerAudio.manager");
window.PENGO.client.ide.runEngine.howlerAudio.manager.resolve=function(){var a,c=function k(c,e,g,d,r,n,p){k.super_.constructor.call(this,c,e,g,d,r,n,p);(c=a.resourceManager.getTypes().AUDIO)&&g.registerAssetCallback(c,"getDescription",function(){return{type:"_Audio_",accesor:[]}})};c.prototype={};return{dependencies:function(k){a=k;k.inheritance.inheritance.inherits(c,k.runEngine.manager.base.Manager);k.runEngine.paramManager.addParamTypeIdeEx("_Audio_","Audio")},implementation:{Manager:c,config:{}}}};t("PENGO.client.ide.runEngine.howlerAudio.actuators.audioPlayer");
window.PENGO.client.ide.runEngine.howlerAudio.actuators.audioPlayer.resolve=function(){return{dependencies:function(a){a.runEngine.blackboxRepository.updateBlackboxTypeToIDE("_AudioPlayer_key",l,"AudioPlayer","Audio/actuators");a.runEngine.blackboxRepository.setInParamConnectionRulesToBlackboxType("_AudioPlayer_key","audio",m,"_Audio_","Sound to be played");a.runEngine.blackboxRepository.setInParamConnectionRulesToBlackboxType("_AudioPlayer_key","loop",m,"bool","Enable audio looping");a.runEngine.blackboxRepository.setOuputsFireModeToBlackboxType("_AudioPlayer_key",
["async","async","both","async"])}}};})();
